
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'B8478DA6198FAC5FB24C135705F04260'
    
_lr_action_items = {'PRINT':([0,2,4,5,8,9,10,12,13,14,15,16,17,20,28,29,30,31,32,33,34,35,],[1,1,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,1,-15,-14,1,-11,-13,-12,-10,-2,-5,]),'EQUALS':([22,],[29,]),'$end':([6,7,18,19,],[0,-1,-4,-3,]),'LPAREN':([0,1,2,3,4,5,8,9,10,12,13,14,15,16,17,20,23,24,25,26,28,29,30,31,32,33,34,35,],[3,17,3,3,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,3,-15,3,3,3,3,-14,3,-11,-13,-12,-10,-2,-5,]),'TRUE':([0,2,3,4,5,8,9,10,12,13,14,15,16,17,20,23,24,25,26,28,29,30,31,32,33,34,35,],[4,4,4,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,4,-15,4,4,4,4,-14,4,-11,-13,-12,-10,-2,-5,]),'CLSTRING':([0,2,3,4,5,8,9,10,12,13,14,15,16,17,20,23,24,25,26,28,29,30,31,32,33,34,35,],[5,5,5,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,5,-15,5,5,5,5,-14,5,-11,-13,-12,-10,-2,-5,]),'RPAREN':([4,5,8,9,10,12,13,14,15,16,20,21,27,28,30,31,32,33,34,35,],[-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,-15,28,34,-14,-11,-13,-12,-10,-2,-5,]),'MINUS':([4,5,8,12,13,14,15,16,20,21,28,30,31,32,33,],[-25,-28,-15,-26,-24,-27,23,-23,-15,23,-14,-11,-13,-12,-10,]),'DIV':([4,5,8,12,13,14,15,16,20,21,28,30,31,32,33,],[-25,-28,-15,-26,-24,-27,24,-23,-15,24,-14,24,-13,-12,24,]),'newline':([2,4,5,8,9,10,12,13,14,15,16,20,28,30,31,32,33,34,35,],[19,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,-15,-14,-11,-13,-12,-10,-2,-5,]),'MULT':([4,5,8,12,13,14,15,16,20,21,28,30,31,32,33,],[-25,-28,-15,-26,-24,-27,25,-23,-15,25,-14,25,-13,-12,25,]),'LET':([0,2,4,5,8,9,10,12,13,14,15,16,17,20,28,29,30,31,32,33,34,35,],[11,11,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,11,-15,-14,11,-11,-13,-12,-10,-2,-5,]),'FALSE':([0,2,3,4,5,8,9,10,12,13,14,15,16,17,20,23,24,25,26,28,29,30,31,32,33,34,35,],[12,12,12,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,12,-15,12,12,12,12,-14,12,-11,-13,-12,-10,-2,-5,]),'IDENTIFIER':([0,2,3,4,5,8,9,10,11,12,13,14,15,16,17,20,23,24,25,26,28,29,30,31,32,33,34,35,],[13,13,13,-25,-28,-9,-7,-6,22,-26,-24,-27,-8,-23,13,-15,13,13,13,13,-14,13,-11,-13,-12,-10,-2,-5,]),'CLFLOAT':([0,2,3,4,5,8,9,10,12,13,14,15,16,17,20,23,24,25,26,28,29,30,31,32,33,34,35,],[14,14,14,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,14,-15,14,14,14,14,-14,14,-11,-13,-12,-10,-2,-5,]),'INTEGER':([0,2,3,4,5,8,9,10,12,13,14,15,16,17,20,23,24,25,26,28,29,30,31,32,33,34,35,],[16,16,16,-25,-28,-9,-7,-6,-26,-24,-27,-8,-23,16,-15,16,16,16,16,-14,16,-11,-13,-12,-10,-2,-5,]),'PLUS':([4,5,8,12,13,14,15,16,20,21,28,30,31,32,33,],[-25,-28,-15,-26,-24,-27,26,-23,-15,26,-14,-11,-13,-12,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,2,17,29,],[2,2,27,35,]),'program':([0,],[6,]),'expressions':([0,2,],[7,18,]),'literal':([0,2,3,17,23,24,25,26,29,],[8,8,20,8,20,20,20,20,8,]),'letdeclarations':([0,2,17,29,],[9,9,9,9,]),'statement':([0,2,17,29,],[10,10,10,10,]),'primary':([0,2,3,17,23,24,25,26,29,],[15,15,21,15,30,31,32,33,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expressions','program',1,'p_program','HMM.py',121),
  ('expression -> PRINT LPAREN expression RPAREN','expression',4,'p_prints','HMM.py',125),
  ('expressions -> expression newline','expressions',2,'p_expressions','HMM.py',132),
  ('expressions -> expression expressions','expressions',2,'p_expressions','HMM.py',133),
  ('letdeclarations -> LET IDENTIFIER EQUALS expression','letdeclarations',4,'p_letdeclarations','HMM.py',142),
  ('expression -> statement','expression',1,'p_expression','HMM.py',150),
  ('expression -> letdeclarations','expression',1,'p_expression','HMM.py',151),
  ('statement -> primary','statement',1,'p_statement','HMM.py',157),
  ('statement -> literal','statement',1,'p_statement','HMM.py',158),
  ('primary -> primary PLUS primary','primary',3,'p_primary_binop','HMM.py',189),
  ('primary -> primary MINUS primary','primary',3,'p_primary_binop','HMM.py',190),
  ('primary -> primary MULT primary','primary',3,'p_primary_binop','HMM.py',191),
  ('primary -> primary DIV primary','primary',3,'p_primary_binop','HMM.py',192),
  ('primary -> LPAREN primary RPAREN','primary',3,'p_expression_group','HMM.py',216),
  ('primary -> literal','primary',1,'p_expression_number','HMM.py',223),
  ('type -> INT','type',1,'p_type','HMM.py',229),
  ('type -> FLOAT','type',1,'p_type','HMM.py',230),
  ('type -> BOOL','type',1,'p_type','HMM.py',231),
  ('type -> LIST','type',1,'p_type','HMM.py',232),
  ('type -> TUPLE','type',1,'p_type','HMM.py',233),
  ('type -> OBJECT','type',1,'p_type','HMM.py',234),
  ('type -> CLSTRING','type',1,'p_type','HMM.py',235),
  ('literal -> INTEGER','literal',1,'p_literal','HMM.py',239),
  ('literal -> IDENTIFIER','literal',1,'p_literal','HMM.py',240),
  ('literal -> TRUE','literal',1,'p_literal','HMM.py',241),
  ('literal -> FALSE','literal',1,'p_literal','HMM.py',242),
  ('literal -> CLFLOAT','literal',1,'p_literal','HMM.py',243),
  ('literal -> CLSTRING','literal',1,'p_literal','HMM.py',244),
]
