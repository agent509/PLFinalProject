
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'CED1660FB95053D7805959BD5B17D0F0'
    
_lr_action_items = {'$end':([6,9,25,26,],[-1,0,-4,-3,]),'FALSE':([0,1,2,3,5,7,8,10,11,12,13,14,16,17,18,19,20,21,23,27,28,29,30,32,33,34,35,],[14,-28,-8,-27,-25,-7,-9,-6,-23,-24,14,-26,14,14,14,14,14,14,-15,-13,-10,-12,-11,-14,14,-2,-5,]),'CLSTRING':([0,1,2,3,5,7,8,10,11,12,13,14,16,17,18,19,20,21,23,27,28,29,30,32,33,34,35,],[1,-28,-8,-27,-25,-7,-9,-6,-23,-24,1,-26,1,1,1,1,1,1,-15,-13,-10,-12,-11,-14,1,-2,-5,]),'newline':([1,2,3,5,7,8,10,11,12,14,16,23,27,28,29,30,32,34,35,],[-28,-8,-27,-25,-7,-9,-6,-23,-24,-26,26,-15,-13,-10,-12,-11,-14,-2,-5,]),'EQUALS':([24,],[33,]),'CLFLOAT':([0,1,2,3,5,7,8,10,11,12,13,14,16,17,18,19,20,21,23,27,28,29,30,32,33,34,35,],[3,-28,-8,-27,-25,-7,-9,-6,-23,-24,3,-26,3,3,3,3,3,3,-15,-13,-10,-12,-11,-14,3,-2,-5,]),'PLUS':([1,2,3,5,8,11,12,14,22,23,27,28,29,30,32,],[-28,18,-27,-25,-15,-23,-24,-26,18,-15,-13,-10,-12,-11,-14,]),'LET':([0,1,2,3,5,7,8,10,11,12,14,16,21,23,27,28,29,30,32,33,34,35,],[15,-28,-8,-27,-25,-7,-9,-6,-23,-24,-26,15,15,-15,-13,-10,-12,-11,-14,15,-2,-5,]),'LPAREN':([0,1,2,3,4,5,7,8,10,11,12,13,14,16,17,18,19,20,21,23,27,28,29,30,32,33,34,35,],[13,-28,-8,-27,21,-25,-7,-9,-6,-23,-24,13,-26,13,13,13,13,13,13,-15,-13,-10,-12,-11,-14,13,-2,-5,]),'PRINT':([0,1,2,3,5,7,8,10,11,12,14,16,21,23,27,28,29,30,32,33,34,35,],[4,-28,-8,-27,-25,-7,-9,-6,-23,-24,-26,4,4,-15,-13,-10,-12,-11,-14,4,-2,-5,]),'INTEGER':([0,1,2,3,5,7,8,10,11,12,13,14,16,17,18,19,20,21,23,27,28,29,30,32,33,34,35,],[11,-28,-8,-27,-25,-7,-9,-6,-23,-24,11,-26,11,11,11,11,11,11,-15,-13,-10,-12,-11,-14,11,-2,-5,]),'DIV':([1,2,3,5,8,11,12,14,22,23,27,28,29,30,32,],[-28,17,-27,-25,-15,-23,-24,-26,17,-15,-13,17,-12,17,-14,]),'IDENTIFIER':([0,1,2,3,5,7,8,10,11,12,13,14,15,16,17,18,19,20,21,23,27,28,29,30,32,33,34,35,],[12,-28,-8,-27,-25,-7,-9,-6,-23,-24,12,-26,24,12,12,12,12,12,12,-15,-13,-10,-12,-11,-14,12,-2,-5,]),'TRUE':([0,1,2,3,5,7,8,10,11,12,13,14,16,17,18,19,20,21,23,27,28,29,30,32,33,34,35,],[5,-28,-8,-27,-25,-7,-9,-6,-23,-24,5,-26,5,5,5,5,5,5,-15,-13,-10,-12,-11,-14,5,-2,-5,]),'MINUS':([1,2,3,5,8,11,12,14,22,23,27,28,29,30,32,],[-28,20,-27,-25,-15,-23,-24,-26,20,-15,-13,-10,-12,-11,-14,]),'MULT':([1,2,3,5,8,11,12,14,22,23,27,28,29,30,32,],[-28,19,-27,-25,-15,-23,-24,-26,19,-15,-13,19,-12,19,-14,]),'RPAREN':([1,2,3,5,7,8,10,11,12,14,22,23,27,28,29,30,31,32,34,35,],[-28,-8,-27,-25,-7,-9,-6,-23,-24,-26,32,-15,-13,-10,-12,-11,34,-14,-2,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'primary':([0,13,16,17,18,19,20,21,33,],[2,22,2,27,28,29,30,2,2,]),'literal':([0,13,16,17,18,19,20,21,33,],[8,23,8,23,23,23,23,8,8,]),'program':([0,],[9,]),'statement':([0,16,21,33,],[10,10,10,10,]),'expressions':([0,16,],[6,25,]),'expression':([0,16,21,33,],[16,16,31,35,]),'letdeclarations':([0,16,21,33,],[7,7,7,7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> expressions','program',1,'p_program','HMM.py',121),
  ('expression -> PRINT LPAREN expression RPAREN','expression',4,'p_prints','HMM.py',125),
  ('expressions -> expression newline','expressions',2,'p_expressions','HMM.py',132),
  ('expressions -> expression expressions','expressions',2,'p_expressions','HMM.py',133),
  ('letdeclarations -> LET IDENTIFIER EQUALS expression','letdeclarations',4,'p_letdeclarations','HMM.py',142),
  ('expression -> statement','expression',1,'p_expression','HMM.py',150),
  ('expression -> letdeclarations','expression',1,'p_expression','HMM.py',151),
  ('statement -> primary','statement',1,'p_statement','HMM.py',157),
  ('statement -> literal','statement',1,'p_statement','HMM.py',158),
  ('primary -> primary PLUS primary','primary',3,'p_primary_binop','HMM.py',189),
  ('primary -> primary MINUS primary','primary',3,'p_primary_binop','HMM.py',190),
  ('primary -> primary MULT primary','primary',3,'p_primary_binop','HMM.py',191),
  ('primary -> primary DIV primary','primary',3,'p_primary_binop','HMM.py',192),
  ('primary -> LPAREN primary RPAREN','primary',3,'p_expression_group','HMM.py',216),
  ('primary -> literal','primary',1,'p_expression_number','HMM.py',223),
  ('type -> INT','type',1,'p_type','HMM.py',229),
  ('type -> FLOAT','type',1,'p_type','HMM.py',230),
  ('type -> BOOL','type',1,'p_type','HMM.py',231),
  ('type -> LIST','type',1,'p_type','HMM.py',232),
  ('type -> TUPLE','type',1,'p_type','HMM.py',233),
  ('type -> OBJECT','type',1,'p_type','HMM.py',234),
  ('type -> CLSTRING','type',1,'p_type','HMM.py',235),
  ('literal -> INTEGER','literal',1,'p_literal','HMM.py',243),
  ('literal -> IDENTIFIER','literal',1,'p_literal','HMM.py',244),
  ('literal -> TRUE','literal',1,'p_literal','HMM.py',245),
  ('literal -> FALSE','literal',1,'p_literal','HMM.py',246),
  ('literal -> CLFLOAT','literal',1,'p_literal','HMM.py',247),
  ('literal -> CLSTRING','literal',1,'p_literal','HMM.py',248),
]
